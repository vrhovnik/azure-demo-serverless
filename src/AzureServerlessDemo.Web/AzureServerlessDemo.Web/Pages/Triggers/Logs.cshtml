@page
@model AzureServerlessDemo.Web.Pages.Triggers.LogsPageModel

@{
    ViewData["Title"] = "Logs about usage from Azure Tables";
}

@section breadcrumbs
{
    <li class="breadcrumb-item">
        <a asp-page="/Info/Index">Starting page</a>
    </li>
    <li class="breadcrumb-item">
        <a asp-page="/Triggers/Workflow">Triggers</a>
    </li>
    <li class="breadcrumb-item active">Logs from Azure tables</li>
}

<h1>Logs from Azure Tables</h1>

<div class="container mt-2"
     id="alertDiv">
</div>

<div class="container">
    <input aria-label="search term"
           class="form-control"
           hx-get
           hx-indicator="#indicator"
           hx-swap="outerHtml"
           hx-target="#grid"
           hx-trigger="keyup changed delay:300ms"
           id="tbQuery"
           name="query"
           placeholder="enter search term"
           type="text">
</div>
<div class="container mt-2">
    <div id="grid">
        @await Html.PartialAsync("_LogsList", Model.Logs)
        <img alt="tail spin"
             class="htmx-indicator"
             id="indicator"
             src="~/spinners/spinner.svg">
    </div>
</div>

@section Scripts
{
    <script crossorigin="anonymous"
            integrity="sha384-tvG/2mnCFmGQzYC1Oh3qxQ7CkQ9kMzYjWZSNtrRZygHPDDqottzEJsqS4oUVodhW"
            src="https://unpkg.com/htmx.org@1.6.1"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/3.1.7/signalr.min.js"></script>
    <script type="application/javascript">
        document.addEventListener('DOMContentLoaded', function () {
             const connectionAlerts = new signalR.HubConnectionBuilder()
                         .withUrl('@Model.FunctionURL')
                         .configureLogging(signalR.LogLevel.Information)                         
                         .build();
             
             connectionAlerts.start()
                            .then(() => console.log('connected to messages via SignalR!'))
                            .catch(console.error);
             
             connection.on('newMessage', (message) => {
                     document.getElementById("alertDiv").innerHTML = message;
                   });
         });
    </script>
}